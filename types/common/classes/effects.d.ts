import type { BackgroundBlendModeClassObj, BoxShadowClassObj, MixBlendModeClassObj, OpacityClassObj, ThemeColorObj, ThemeColorOpacityObj } from '@common/types';
declare const _default: {
    shadow_color: {
        opacity: ThemeColorOpacityObj;
        hover: ThemeColorObj;
        focus: ThemeColorObj;
        active: ThemeColorObj;
        before: ThemeColorObj;
        after: ThemeColorObj;
        gray: Record<import("@common/types").ThemeColorHue, string>;
        red: Record<import("@common/types").ThemeColorHue, string>;
        pink: Record<import("@common/types").ThemeColorHue, string>;
        purple: Record<import("@common/types").ThemeColorHue, string>;
        deep_purple: Record<import("@common/types").ThemeColorHue, string>;
        indigo: Record<import("@common/types").ThemeColorHue, string>;
        blue: Record<import("@common/types").ThemeColorHue, string>;
        light_blue: Record<import("@common/types").ThemeColorHue, string>;
        cyan: Record<import("@common/types").ThemeColorHue, string>;
        teal: Record<import("@common/types").ThemeColorHue, string>;
        green: Record<import("@common/types").ThemeColorHue, string>;
        light_green: Record<import("@common/types").ThemeColorHue, string>;
        lime: Record<import("@common/types").ThemeColorHue, string>;
        yellow: Record<import("@common/types").ThemeColorHue, string>;
        orange: Record<import("@common/types").ThemeColorHue, string>;
        deep_orange: Record<import("@common/types").ThemeColorHue, string>;
        transparent: string;
        black: string;
        white: string;
    };
    shadow: {
        hover: BoxShadowClassObj;
        focus: BoxShadowClassObj;
        active: BoxShadowClassObj;
        before: BoxShadowClassObj;
        after: BoxShadowClassObj;
        base: string;
        none: string;
        sm: string;
        md: string;
        lg: string;
        xl: string;
        "2xl": string;
        inner: string;
    };
    opacity: OpacityClassObj;
    mix_blend_mode: MixBlendModeClassObj;
    background_blend_mode: BackgroundBlendModeClassObj;
};
export default _default;
//# sourceMappingURL=effects.d.ts.map